name: ClashForge

on:
  push:
    paths-ignore:
      - '**'
  workflow_dispatch:

jobs:
  run_demo_actions:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT }}

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.10'

      # Step 3: Install dependencies from requirements.txt
      - name: Install requirements.txt
        run: |
          pip install -r ./requirements.txt

      # Step 4: Run ClashForge.py script to generate clash_config.yaml
      - name: Run ClashForge.py
        run: python ClashForge.py

      # Step 5: Rename clash_config.yaml to clashforge.yaml
      - name: Rename clash_config.yaml to clashforge.yaml
        run: mv clash_config.yaml clashforge.yaml

      # Step 6: Update existing Gist with renamed file content
      - name: Upload clashforge.yaml to Existing Gist
        env:
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
          GIST_ID: ${{ secrets.GIST_ID }}
        run: |
          # Use curl command to update the existing gist using its ID
          curl -s \
            -H "Authorization: token $GIST_TOKEN" \
            -X PATCH \
            --data "{\"files\":{\"clashforge.yaml\":{\"content\":\"$(cat clashforge.yaml)\"}}}" \
            https://api.github.com/gists/$GIST_ID

      # Optional step for debugging or confirmation purposes
      - name: Print Updated Gist URL
        env:
          GIST_ID: ${{ secrets.GIST_ID }}
        run: echo "Your updated gist is available at https://gist.github.com/${{ github.actor }}/$GIST_ID"
