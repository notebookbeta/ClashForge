name: ClashForge
on: 
  schedule: 
    - cron: '0 7-22/5 * * *'
  workflow_dispatch:

jobs:
  run_demo_actions:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 适配GitHub公共仓库限制
    env:
      PYTHONUNBUFFERED: 1  # 实时输出Python日志

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false  # 避免凭证冲突

    - name: Set up Python
      uses: actions/setup-python@v5  # 升级到最新版本
      with:
        python-version: '3.10.10'
        cache: 'pip'  # 启用依赖缓存

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r ./requirements.txt

    - name: Run ClashForge.py
      timeout-minutes: 30  # 步骤级超时
      run: |
        echo "🕒 开始执行 ClashForge.py..."
        python -u ClashForge.py 2>&1 | tee output.log
        echo "✅ 脚本执行完毕"

    - name: Commit changes
      if: success()
      id: commit
      timeout-minutes: 5
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add clash_config.yaml
        
        # 检测文件变更
        if git diff --staged --quiet; then
          echo "::notice::没有需要提交的变更"
          echo "changes_detected=false" >> $GITHUB_OUTPUT
        else
          git commit -m "自动更新配置 [skip ci]"
          echo "::notice::检测到配置变更已提交"
          echo "changes_detected=true" >> $GITHUB_OUTPUT
        fi

    - name: Push changes
      if: steps.commit.outputs.changes_detected == 'true'
      uses: ad-m/github-push-action@v0.6.0  # 使用专用推送action
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}  # 改用默认token
        force: true
